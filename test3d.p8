pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()
	poke(0x5f36,8)
	poke(0x5f39,2)
	--player
	--fov is 110 degrees in revolutions
	p={x=10,y=10,a=0.01,spd=0.5,fov=0.333}

	mm={h=32,w=32}
end

function _update()
	if btn(0,0) then
		p.a-=0.02
	end
	if btn(1,0) then
		p.a+=0.02
	end
	if btn(2,1) then
		nx=p.x+cos(p.a)*p.spd
		ny=p.y+sin(p.a)*p.spd
		if mget(flr(nx/8),flr(ny/8))==0 then
			p.x=nx
			p.y=ny
		end
	end
	if btn(3,1) then
		nx=p.x-cos(p.a)*p.spd
		ny=p.y-sin(p.a)*p.spd
		if mget(flr(nx/8),flr(ny/8))==0 then
			p.x=nx
			p.y=ny
		end
	end
	if btn(1,1) then
		strafe_ang=p.a+0.25
		nx=p.x+cos(strafe_ang)*p.spd
		ny=p.y+sin(strafe_ang)*p.spd
		if mget(flr(nx/8),flr(ny/8))==0 then
			p.x=nx
			p.y=ny
		end
	end
	if btn(0,1) then
		strafe_ang=p.a-0.25
		nx=p.x+cos(strafe_ang)*p.spd
		ny=p.y+sin(strafe_ang)*p.spd
		if mget(flr(nx/8),flr(ny/8))==0 then
			p.x=nx
			p.y=ny
		end
	end
	dir_ray=shoot_ray(p.x,p.y,p.a)
end

function _draw()
	cls()
	pal()

	--floor
	rectfill(0,64,127,127,6)
	--draw_floor()

	--ceiling
	rectfill(0,0,127,63,12)

	--map()
	
	--https://www.lexaloffle.com/bbs/?tid=52986
	--fillp(0x8124)

	--i hate that i have to do this but pico8 is forcing my hand
	--pal(1,-11)
	--pal(2,-16)

	palt(0,false)
	for i=0,127 do
		ang=p.a+(i-64)*(p.fov/128)
		ray=shoot_ray(p.x,p.y,ang)
		wallh=64/max(1,ray.dist)
		topy=54-wallh/2*3
		boty=64+wallh/2

		wallh=boty-topy
		--line(i,topy,i,boty,dist2col(ray.dist))
		--tline(i,topy,i,boty,8+ray.tex,0,0,0.125)
		for y=topy,boty do
			sx=spr*8+(ray.tex*16)
			rely=(y-topy)/wallh
			sy=flr(rely*16)
			col=sget(sx,sy)
			pset(i,y,col)
		end
	end
	--fillp()

	--draw minimap
	draw_minimap()

	--[[line(dir_ray.x,dir_ray.y,p.x,p.y,8)
	pset(p.x,p.y,14)]]

	print("cpu: "..stat(1),13)
	print("fps: "..stat(7),13)
end

--pretty naive raycasting
--should use DDA but this should be good enough for now
function shoot_ray(x,y,a)
	dx=cos(a)
	dy=sin(a)
	dist=0
	hit=false
	while not hit do
		x+=dx
		y+=dy
		dist+=1
		spr=mget(x/8,y/8)
		if spr~=0 then
			hit=true
			cellx=x%8
			celly=y%8
			if abs(cellx)<abs(celly) then
				texpos=celly/8
			else
				texpos=cellx/8
			end

			return {x=x,y=y,dist=dist,tex=texpos,spr=spr}
		end
	end
end

function dist2col(dist)
	--the higher bits are the so-called "transition" colors
	cols={0x77,0x76,0x66,0x6d,0xdd,0xd5,0x55,0x51,0x11,0x12,0x22,0x20,0x00}
	max_dist=40
	dist=mid(1,dist,max_dist)
	local index=flr(#cols*(dist/max_dist))+1
	return cols[index] or cols[#cols]
end

function draw_minimap()
	clip(0,0,mm.w,mm.h)

	sx=flr(mid(-32,(mm.w/2)-p.x,0))
	sy=flr(mid(-56,(mm.h/2)-p.y,0))
	map(0,0,sx,sy)

	--draw player and player direction line
	px=flr(p.x+sx)
	py=flr(p.y+sy)

	rx=flr(dir_ray.x+sx)
	ry=flr(dir_ray.y+sy)

	line(px,py,rx,ry,8)
	pset(px,py,8)
	clip()
	palt()
end

__gfx__
0000000077777777aaa99990aaa99990777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000077777777a4444440a44444407dddddddddddddd700000000000000000000000000000000000000000000000000000000000000000000000000000000
007007007777777794444440944444407dddddddddddddd700000000000000000000000000000000000000000000000000000000000000000000000000000000
000770007777777700000000000000007dd5555555555dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700077777777990aaa99990aaa997dd5000000007dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070077777777440a4444440a44447dd5055555507dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
000000007777777744094444440944447dd5056666707dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
000000007777777700000000000000007dd5056666707dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000aaa99990aaa999907dd5056666707dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000a4444440a44444407dd5056666707dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000094444440944444407dd5057777707dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000007dd5000000007dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000990aaa99990aaa997dd5777777777dd700000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000440a4444440a44447dddddddddddddd700000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000044094444440944447dddddddddddddd700000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000400000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000404000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200040000040002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000404000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000004000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
